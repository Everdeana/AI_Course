<BeautyGAN + Django + API + NextJS>
멀티모달 MultiModal

NextJS 디자인 완성
=> 서버로 이미지를 전송
1. 첨부파일을 올려서 서버에 보내는 방법
2. 서버에서 있는파일을 불러오는 방법

3. beautyganclient vscode로 열고
npm run dev
http://localhost:11000

vscode 새것을 실행
서버를 동작시킨 상태에서 client 에서 API를 가져오기
<파이썬 서버>
python manage.py runserver
화장이 된 모델 정보 => json
http://localhost:8000/api/v1/getmodellist
postman

<서버와 client가 통신할때 사용하는 라이브러리>
- axios

reactjs, nextjs, nodejs
https://www.npmjs.com/package/axios

google -> "nextjs axios install"
npm install axios
npm run dev

google -> "nextjs axios example"

GET : 데이터 조회
POST : 데이터 등록 및 전송
PUT : 데이터 수정
DELETE : 데이터 삭제

=> Rest API

Hook(훅)
useEffect, useState, useMemo, Redux...

python manage.py makemigrations api
python manage.py migrate

두번씩 실행되는것 방지
next.config.mjs 을 수정

/** @type {import('next').NextConfig} */
const nextConfig = {
    reactStrictMode : false
};

export default nextConfig;

* useState 사용법

useState 사용법

const [cnt, setCnt] = useState(기본값);

http://localhost:8000/api/v1/getmodellist

swcMinify: true,
  async rewrites() {
    return [
      {
        source: "/:path*",
        destination: "(전달받은 API 주소)/:path*",
      },
    ];
  },

beautyganweb
python mange.py runserver

beauryganclient
npm run dev

google -> "html loading animation"

/* HTML: <div class="loader"></div> */
.loader {
  width: 60px;
  aspect-ratio: 2;
  --_g: no-repeat radial-gradient(circle closest-side,#000 90%,#0000);
  background: 
    var(--_g) 0%   50%,
    var(--_g) 50%  50%,
    var(--_g) 100% 50%;
  background-size: calc(100%/3) 50%;
  animation: l3 1s infinite linear;
}
@keyframes l3 {
    20%{background-position:0%   0%, 50%  50%,100%  50%}
    40%{background-position:0% 100%, 50%   0%,100%  50%}
    60%{background-position:0%  50%, 50% 100%,100%   0%}
    80%{background-position:0%  50%, 50%  50%,100% 100%}
}

loadingProcess.js

받은 파일 이미지 교체

파일이름 :  1.jpg
save_file =  1_Ui0msMr.jpg

http://localhost:11000/result?org={org_img}&ref={ref_img}&rst={rst_img}





